name: Deploy Infrastructure

on:
  workflow_dispatch:   # manual trigger only

permissions:
  id-token: write
  contents: read

jobs:
  infra:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: eu-central-1
      CLUSTER_NAME: lawyal-eks

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::518394500999:role/GitHubActionsRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init -reconfigure

      - name: Terraform Apply (Infra)
        run: terraform apply -auto-approve

      # ✅ Ensure kubeconfig is always updated for kubectl/helm
      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --name $CLUSTER_NAME --region $AWS_REGION

      - name: Apply aws-auth ConfigMap
        run: |
          echo "⏳ Applying aws-auth ConfigMap..."
          terraform output -raw aws_auth_manifest > aws-auth.yaml
          kubectl apply -f aws-auth.yaml
          echo "✅ aws-auth applied."

      - name: Wait for Nodegroups
        run: |
          echo "⏳ Waiting for nodegroups to become ACTIVE..."
          for ng in $(aws eks list-nodegroups --cluster-name $CLUSTER_NAME --region $AWS_REGION --query "nodegroups[]" --output text); do
            echo "→ Waiting for $ng..."
            aws eks wait nodegroup-active --cluster-name $CLUSTER_NAME --nodegroup-name $ng --region $AWS_REGION
            echo "✅ Nodegroup $ng is ACTIVE."
          done
