name: App Deploy (Helm)

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  app:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: eu-central-1
      ECR_REGISTRY: 518394500999.dkr.ecr.eu-central-1.amazonaws.com
      ECR_REPOSITORY: lawyal/flask-app
      CLUSTER_NAME: lawyal-eks

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::518394500999:role/GitHubActionsRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name $CLUSTER_NAME --region $AWS_REGION

      # ðŸ”Ž Get most recently pushed image tag (by PushedAt)
      - name: Get Latest Image by Push Date
        id: latest
        run: |
          set -euo pipefail
          LATEST_TAG=$(
            aws ecr describe-images \
              --repository-name "$ECR_REPOSITORY" \
              --region "$AWS_REGION" \
              --output json \
            | jq -r '[.imageDetails[]
                       | select(.imageTags != null)
                       | .imageTags[] as $t
                       | {tag:$t, pushedAt:.imagePushedAt}]
                     | sort_by(.pushedAt)
                     | last
                     | .tag'
          )
          if [ -z "${LATEST_TAG:-}" ] || [ "$LATEST_TAG" = "null" ]; then
            echo "No tagged images found in ECR repo $ECR_REPOSITORY"; exit 1
          fi
          echo "Using latest pushed image tag: $LATEST_TAG"
          echo "version_tag=$LATEST_TAG" >> "$GITHUB_OUTPUT"

      - name: Deploy App with Helm
        run: |
          helm upgrade --install flask-app ./helm/flask-app \
            --set image.repository=$ECR_REGISTRY/$ECR_REPOSITORY \
            --set image.tag=${{ steps.latest.outputs.version_tag }} \
            --atomic --timeout 5m
